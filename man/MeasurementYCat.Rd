% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MeasurementYCat.R
\name{MeasurementYCat}
\alias{MeasurementYCat}
\title{Sampler for Partial Mediation Model with Multiple Categorical Indicator for the DV}
\usage{
MeasurementYCat(Data,Prior,R)
}
\arguments{
\item{Data}{list(X, M, y_star)}

\item{Prior}{list(A_M,A_Y)}

\item{R}{number of MCMC iterations, default = 10000}
}
\value{
\describe{
\item{beta_M(R X 2)}{matrix of eq.1 coefficients' draws }
\item{beta_Y(R X 3)}{matrix of eq.2 coefficients' draws }
\item{tau(Y_ind X 2 X R)}{array of indicator coefficients' draws. Each slice is one draw, where rows represent the indicator equation and columns the coefficients. All Slope coefficients as well as intercept of the first equation are fixed to 1 and 0 respectively. }
\item{ssq_y_star(R X Y_ind)}{  Matrix of indicator equations' coefficients' error variance draws }
\item{ssq_M(R X 1)}{vector of eq.1 error variance draws }
\item{cutoff_Y (Y_ind X k_Y X R)}{array of discretized dependent variable indicators' cutoff values.}
\item{Ydraw(R X N)}{Matrix of the augmented latent dependent variable}
\item{mu_draw}{vector of means indexing MCMC draws of the direct effect (used in BFSD to compute Bayes factor)}
\item{var_draw}{vector of variance indexing MCMC draws of the direct effect (used in BFSD to compute Bayes factor)}
}
}
\description{
Estimates a partial mediation model with multiple categorical indicator for the dependent variable
}
\details{
\subsection{Model}{

\eqn{M = \beta_{0M} + X\beta_1 + U_M}{M = \beta_0M + X\beta_1 + U_M} (eq.1) \cr
\eqn{Y = \beta_{0Y} + M\beta_2 + X\beta_3 + U_Y}{Y = \beta_0Y + M\beta_2 + X\beta_3 + U_Y} (eq.2) \cr
}

\subsection{Indicator equations}{

\eqn{y^*_1 = Y + U_{y^*_1}}{y*_1 = Y + U_{y*_1}} \cr
\eqn{\tilde{y}_1 = OrdProbit(y^*_1 ,C_{y_1})}{˜y_1 = OrdProbit(y*_1,C_{y_1})} \cr
\eqn{y^*_2 = \tau_{20} + Y + U_{y^*_2}}{y*_2 = \tau_20 + Y + U_{y*_2}} \cr
\eqn{\tilde{y}_2 = OrdProbit(y^*_2 ,C_{y_2})}{˜y_2 = OrdProbit(y*_2,C_{y_2})} \cr
\eqn{...} \cr
\eqn{y^*_L = \tau_{L0} + Y + U_{y^*_L}}{y*_L = \tau_L0 + Y + U_{y*_L}} \cr
\eqn{\tilde{y}_L = OrdProbit(y^*_L ,C_{y_L})}{˜y_L = OrdProbit(y*_L,C_{y_L})} \cr
}

\subsection{Prior specification:}{

\eqn{\beta_{0M}} \eqn{\sim}{~} N(0,100), \eqn{\beta_{0Y}} \eqn{\sim}{~} \eqn{N(0,100)}  \cr
\eqn{\beta_1} \eqn{\sim}{~} \eqn{N(0,100), \beta_2} \eqn{\sim}{~} \eqn{N(0,100), \beta_3} \eqn{\sim}{~} \eqn{N(0,1)}  \cr
\eqn{\sigma^2_M} \eqn{\sim}{~} \eqn{Inv\chi^2(\nu,\nu S)} , where \eqn{\nu=1} and S=3. \cr
\eqn{\tau_{20}, ..., \tau_{L0}} \eqn{\sim}{~}  \eqn{N(0,100)} \cr
\eqn{\sigma^2_{y*_1}, ..., \sigma^2_{y*_L}} \eqn{\sim}{~} \eqn{Inv\chi^2(\nu,\nu S)} \cr
\eqn{C*_{y_1}, ..., C*_{y_L}} \eqn{\sim}{~} \eqn{N(0,I)} \cr

Note: \eqn{C*_{y_1}, ..., C*_{y_L}} are untransformed
cutoffs, which are then exponentially transformed to impose sign and order constraint on them. Subjective prior values for the error variances are \eqn{\nu=1}, S=3.
}

\subsection{Argument Details}{
}

\subsection{\code{Data = list(X, M, y_star)}}{

\describe{
\item{X(N x 1)}{treatment variable vector}
\item{M(N x 1)}{mediator vector}
\item{y_star(N x Y_ind)}{dependent variable indicators' matrix}
}
}

\subsection{\code{Prior = list(A_M,A_Y)} [optional]}{

\describe{
\item{A_M}{vector of coefficients' prior variances of eq.1, default = rep(100,2)}
\item{A_Y}{vector of coefficients' prior variances of eq.2, default = c(100,100,1)}
}
}
}
\examples{
set.seed(60)
SimMeasurementYCat = function(X, beta_M, beta_Y, sigma_M, cutoff_Y, Y_ind, tau, ssq_y_star){

  nobs = dim(X)[1]
  y_tilde = y_star = matrix(double(nobs*Y_ind), ncol = Y_ind)

  M = beta_M[1] + beta_M[2] * X + rnorm(nobs) * sigma_M
  Y = beta_Y[1] + beta_Y[2] * M + beta_Y[3] * X + rnorm(nobs)

  for(i in 1: Y_ind){
    y_star[,i] = tau[i] + Y + sqrt(ssq_y_star[i])*rnorm(nobs);
    y_tilde[,i] = cut(y_star[,i], br = cutoff_Y[i,], right=TRUE, include.lowest = TRUE, labels = FALSE)
  }

  return(list(Y = Y, M = M, y_tilde = y_tilde, X = X,
              beta_M = beta_M,
              k_Y=dim(cutoff_Y)[2]-1, beta_Y = beta_Y, tau = tau,
             ssq_y_star = ssq_y_star, y_star = y_star, cutoff_Y = cutoff_Y,
              Y_ind=Y_ind))
}

Y_ind = 2
Ycut = 8
nobs = 1000
X=as.matrix(runif(nobs,min=0, max=1))
beta_M = c(.5,1)
beta_Y = c(1, 4, 2)
sigma_M = 1^.5
ssq_y_star = c(.5,.7)
tau = c(0,-.5)   #first intercept should always be 0
cutoff_Y =  matrix(c(-100, 0, 1.6, 2, 2.2, 3.3, 6,  100,
                     -100, 0, 1, 2, 3, 4, 5, 100) ,ncol= Ycut, byrow = T)
DataYCat = SimMeasurementYCat(X, beta_M, beta_Y, sigma_M, cutoff_Y, Y_ind, tau, ssq_y_star)

#estimation
A_M = c(100,100); #Prior variance for beta_0M, beta_1
A_Y = c(100,100,1) #Prior variance for beta_0Y, beta_2, beta_3
Prior = list(A_M = A_M, A_Y = A_Y)
Ycut = max(as.matrix(DataYCat$y_tilde)[,1]) +1
Data = list(X=cbind(rep(1,length(DataYCat$X)),DataYCat$M,DataYCat$X), y = as.matrix(DataYCat$y_tilde),
            k=Ycut-1, Y_ind=dim(as.matrix(DataYCat$y_tilde))[2])
out = MeasurementYCat(Data=Data, Prior=Prior, R=10000)

#results
colMeans(out$beta_M)
colMeans(out$beta_Y)
apply(out$cutoff_Y,c(1,2),FUN = mean)
}
